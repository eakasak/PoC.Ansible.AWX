{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevApp\\\\PoC.Ansible.AWX\\\\PoC.Ansible.AWX\\\\ClientApp\\\\src\\\\components\\\\redis-1click.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Redis1Click extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCount: 0,\n      currentstatus: false,\n      invenid: 0,\n      ip: \"\"\n    };\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.createInventory = this.createInventory.bind(this);\n  }\n\n  incrementCounter() {\n    this.setState({\n      currentCount: this.state.currentCount + 1\n    });\n    this.populateAWXJobTemplate(); // this.populateAWXJobClustercmd();\n  }\n\n  createInventory() {\n    this.populateCreateInventory();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"VM Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"aria-live\": \"polite\",\n        children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.currentstatus.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"aria-live\": \"polite\",\n        children: [\"Current ip: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.ip.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vm_name1\",\n          placeholder: \"vm_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ip1\",\n          placeholder: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"memory_mb1\",\n          placeholder: \"memory_mb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"num_cpus1\",\n          placeholder: \"num_cpus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vm_name2\",\n          placeholder: \"vm_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ip2\",\n          placeholder: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"memory_mb2\",\n          placeholder: \"memory_mb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"num_cpus2\",\n          placeholder: \"num_cpus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vm_name3\",\n          placeholder: \"vm_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ip3\",\n          placeholder: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"memory_mb3\",\n          placeholder: \"memory_mb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"num_cpus3\",\n          placeholder: \"num_cpus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vm_name4\",\n          placeholder: \"vm_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ip4\",\n          placeholder: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"memory_mb4\",\n          placeholder: \"memory_mb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"num_cpus4\",\n          placeholder: \"num_cpus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vm_name5\",\n          placeholder: \"vm_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ip5\",\n          placeholder: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"memory_mb5\",\n          placeholder: \"memory_mb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"num_cpus5\",\n          placeholder: \"num_cpus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vm_name6\",\n          placeholder: \"vm_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ip6\",\n          placeholder: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"memory_mb6\",\n          placeholder: \"memory_mb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"num_cpus6\",\n          placeholder: \"num_cpus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Redis DB Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"aria-live\": \"polite\",\n        children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.currentstatus.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"redisport\",\n          placeholder: \"redisport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nodetimeout\",\n          placeholder: \"nodetimeout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"maxclients\",\n          placeholder: \"maxclients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"maxmemory\",\n          placeholder: \"maxmemory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"requirepass\",\n          placeholder: \"requirepass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Make Redis DB Cluster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is a simple example of a React component.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"aria-live\": \"polite\",\n        children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.currentstatus.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"clustercmd\",\n          class: \"form-label\",\n          children: \"cmd : redis-cli -a VP53tHYgfxcHRLFDtuLGnmhKXRuUafaN --cluster create 10.100.65.201:7001 10.100.65.202:7001 10.100.65.203:7001 10.100.65.204:7001 10.100.65.205:7001 10.100.65.206:7001 --cluster-replicas 1 --cluster-yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"clustercmd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.incrementCounter,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateAWXJobTemplate() {\n    this.setState({\n      currentstatus: false\n    });\n    var job1 = {};\n    job1.vm_name = document.getElementById(\"vm_name1\").value;\n    job1.ip = document.getElementById(\"ip1\").value;\n    job1.memory_mb = document.getElementById(\"memory_mb1\").value;\n    job1.num_cpus = document.getElementById(\"num_cpus1\").value;\n    this.populateCallTemplate(job1);\n    console.log(\"job1\", job1);\n    var job2 = {};\n    job2.vm_name = document.getElementById(\"vm_name2\").value;\n    job2.ip = document.getElementById(\"ip2\").value;\n    job2.memory_mb = document.getElementById(\"memory_mb2\").value;\n    job2.num_cpus = document.getElementById(\"num_cpus2\").value;\n    this.populateCallTemplate(job2);\n    console.log(\"job2\", job2);\n    var job3 = {};\n    job3.vm_name = document.getElementById(\"vm_name3\").value;\n    job3.ip = document.getElementById(\"ip3\").value;\n    job3.memory_mb = document.getElementById(\"memory_mb3\").value;\n    job3.num_cpus = document.getElementById(\"num_cpus3\").value;\n    this.populateCallTemplate(job3);\n    console.log(\"job3\", job3);\n    var job4 = {};\n    job4.vm_name = document.getElementById(\"vm_name4\").value;\n    job4.ip = document.getElementById(\"ip4\").value;\n    job4.memory_mb = document.getElementById(\"memory_mb4\").value;\n    job4.num_cpus = document.getElementById(\"num_cpus4\").value;\n    this.populateCallTemplate(job4);\n    console.log(\"job4\", job4);\n    var job5 = {};\n    job5.vm_name = document.getElementById(\"vm_name5\").value;\n    job5.ip = document.getElementById(\"ip5\").value;\n    job5.memory_mb = document.getElementById(\"memory_mb5\").value;\n    job5.num_cpus = document.getElementById(\"num_cpus5\").value;\n    this.populateCallTemplate(job5);\n    console.log(\"job5\", job5);\n    var job6 = {};\n    job6.vm_name = document.getElementById(\"vm_name6\").value;\n    job6.ip = document.getElementById(\"ip6\").value;\n    job6.memory_mb = document.getElementById(\"memory_mb6\").value;\n    job6.num_cpus = document.getElementById(\"num_cpus6\").value;\n    this.populateCallTemplate(job6);\n    console.log(\"job6\", job6);\n  }\n\n  async populateCallTemplate(job) {\n    this.setState({\n      currentstatus: false,\n      ip: job.ip\n    });\n    const response = await fetch('api/AWXJobTemplate/CallTemplate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(job)\n    });\n    const data = await response.json(); //this.setState({ forecasts: data, loading: false });\n    // console.log(\"data\", this.state.currentstatus.toString());\n\n    var i = 0;\n    var data2;\n\n    do {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      const response2 = await fetch('api/AWXJobTemplate/GetById/' + data.job);\n      data2 = await response2.json(); //console.log(\"data2\",  !data2.results[0].failed);\n\n      if (data2.count !== 0) {\n        i = 1;\n      }\n    } while (i === 0); // console.log(\"data2\",  !data2.results[0].failed);\n\n\n    this.setState({\n      currentstatus: !data2.results[0].failed\n    });\n    this.populateAWXCreateInventory(job.ip);\n  }\n\n  async populateAWXCreateInventory(ip) {\n    await new Promise(resolve => setTimeout(resolve, 43000));\n    var jobs = {};\n    jobs.ip = ip;\n    const response = await fetch('api/AWXJobRedis/CreateInventory', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jobs)\n    });\n    const data = await response.json();\n    console.log(\"data\", data.id);\n    this.setState({\n      invenid: data.id\n    });\n    localStorage.setItem(\"invenid\" + ip, data.id);\n    console.log(\"data\", data);\n    console.log(\"invenid\", this.state.invenid);\n    this.populateAWXRedisJobTemplate(ip);\n  }\n\n  async populateAWXRedisJobTemplate(ip) {\n    await new Promise(resolve => setTimeout(resolve, 43000));\n    this.setState({\n      currentstatus: false\n    });\n    var jobs = {};\n    jobs.redisport = document.getElementById(\"redisport\").value;\n    jobs.ip = ip;\n    jobs.maxmemory = document.getElementById(\"maxmemory\").value;\n    jobs.maxclients = document.getElementById(\"maxclients\").value;\n    jobs.requirepass = document.getElementById(\"requirepass\").value;\n    jobs.nodetimeout = document.getElementById(\"nodetimeout\").value;\n    jobs.invenid = localStorage.getItem(\"invenid\" + ip);\n    const response = await fetch('api/AWXJobRedis/CallTemplate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jobs)\n    });\n    const data = await response.json(); //this.setState({ forecasts: data, loading: false });\n    // console.log(\"data\", this.state.currentstatus.toString());\n\n    var i = 0;\n    var data2;\n\n    do {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      const response2 = await fetch('api/AWXJobRedis/GetById/' + data.job);\n      data2 = await response2.json(); //console.log(\"data2\",  !data2.results[0].failed);\n\n      if (data2.count !== 0) {\n        i = 1;\n      }\n    } while (i === 0); // console.log(\"data2\",  !data2.results[0].failed);\n\n\n    this.setState({\n      currentstatus: !data2.results[0].failed\n    }); // console.log(\"data2results\", data2.results[0].failed);\n  }\n\n  async populateAWXJobClustercmd() {\n    var jobs = {};\n    jobs.clustercmd = document.getElementById(\"clustercmd\").value;\n    this.setState({\n      currentstatus: false\n    });\n    const response = await fetch('api/AWXJobRedis/MakeCluster', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jobs)\n    });\n    const data = await response.json();\n    var i = 0;\n    var data2;\n\n    do {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      const response2 = await fetch('api/AWXJobRedis/GetById/' + data.job);\n      data2 = await response2.json(); //console.log(\"data2\",  !data2.results[0].failed);\n\n      if (data2.count !== 0) {\n        i = 1;\n      }\n    } while (i === 0); // console.log(\"data2\",  !data2.results[0].failed);\n\n\n    this.setState({\n      currentstatus: !data2.results[0].failed\n    }); // console.log(\"data2results\", data2.results[0].failed);\n  }\n\n}\nRedis1Click.displayName = Redis1Click.name;","map":{"version":3,"sources":["D:/DevApp/PoC.Ansible.AWX/PoC.Ansible.AWX/ClientApp/src/components/redis-1click.js"],"names":["React","Component","Redis1Click","constructor","props","state","currentCount","currentstatus","invenid","ip","incrementCounter","bind","createInventory","setState","populateAWXJobTemplate","populateCreateInventory","render","toString","job1","vm_name","document","getElementById","value","memory_mb","num_cpus","populateCallTemplate","console","log","job2","job3","job4","job5","job6","job","response","fetch","method","headers","body","JSON","stringify","data","json","i","data2","Promise","resolve","setTimeout","response2","count","results","failed","populateAWXCreateInventory","jobs","id","localStorage","setItem","populateAWXRedisJobTemplate","redisport","maxmemory","maxclients","requirepass","nodetimeout","getItem","populateAWXJobClustercmd","clustercmd","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Redis1Click extends Component {\r\n  static displayName = Redis1Click.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0, currentstatus: false, invenid: 0, ip : \"\"  };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n    this.createInventory = this.createInventory.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n    this.populateAWXJobTemplate();\r\n    // this.populateAWXJobClustercmd();\r\n  }\r\n\r\n  createInventory() {\r\n    this.populateCreateInventory();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>VM Setting</h3>\r\n        {/* {this.state.currentCount} /  */}\r\n        {/* <form  class=\"col-6\"> */}\r\n        <p aria-live=\"polite\">Current Status: <strong>{this.state.currentstatus.toString()}</strong></p>\r\n        <p aria-live=\"polite\">Current ip: <strong>{this.state.ip.toString()}</strong></p>\r\n        <div>\r\n          {/* <label for=\"vm_name\" class=\"form-label\">vm name : Ansible-RedisCluster-A10</label> */}\r\n          <input type=\"text\" id=\"vm_name1\" placeholder=\"vm_name\"></input>\r\n          <input type=\"text\" id=\"ip1\" placeholder=\"ip\"></input>\r\n          <input type=\"text\" id=\"memory_mb1\" placeholder=\"memory_mb\"></input>\r\n          <input type=\"text\" id=\"num_cpus1\" placeholder=\"num_cpus\"></input>\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" id=\"vm_name2\" placeholder=\"vm_name\"></input>\r\n          <input type=\"text\" id=\"ip2\" placeholder=\"ip\"></input>\r\n          <input type=\"text\" id=\"memory_mb2\" placeholder=\"memory_mb\"></input>\r\n          <input type=\"text\" id=\"num_cpus2\" placeholder=\"num_cpus\"></input>\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" id=\"vm_name3\" placeholder=\"vm_name\"></input>\r\n          <input type=\"text\" id=\"ip3\" placeholder=\"ip\"></input>\r\n          <input type=\"text\" id=\"memory_mb3\" placeholder=\"memory_mb\"></input>\r\n          <input type=\"text\" id=\"num_cpus3\" placeholder=\"num_cpus\"></input>\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" id=\"vm_name4\" placeholder=\"vm_name\"></input>\r\n          <input type=\"text\" id=\"ip4\" placeholder=\"ip\"></input>\r\n          <input type=\"text\" id=\"memory_mb4\" placeholder=\"memory_mb\"></input>\r\n          <input type=\"text\" id=\"num_cpus4\" placeholder=\"num_cpus\"></input>\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" id=\"vm_name5\" placeholder=\"vm_name\"></input>\r\n          <input type=\"text\" id=\"ip5\" placeholder=\"ip\"></input>\r\n          <input type=\"text\" id=\"memory_mb5\" placeholder=\"memory_mb\"></input>\r\n          <input type=\"text\" id=\"num_cpus5\" placeholder=\"num_cpus\"></input>\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" id=\"vm_name6\" placeholder=\"vm_name\"></input>\r\n          <input type=\"text\" id=\"ip6\" placeholder=\"ip\"></input>\r\n          <input type=\"text\" id=\"memory_mb6\" placeholder=\"memory_mb\"></input>\r\n          <input type=\"text\" id=\"num_cpus6\" placeholder=\"num_cpus\"></input>\r\n        </div>\r\n        <h3>Redis DB Setting</h3>\r\n\r\n        {/* {this.state.currentCount} /  */}\r\n        {/* <form  class=\"col-6\"> */}\r\n        <p aria-live=\"polite\">Current Status: <strong>{this.state.currentstatus.toString()}</strong></p>\r\n        {/* <div>\r\n          <label for=\"ip\" class=\"form-label\">ip : 10.100.65.210</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"ip\"   ></input> \r\n        </div> */}\r\n        <div>\r\n          {/* <label for=\"redisport\" >redisport :  7001</label> */}\r\n          <input type=\"text\" id=\"redisport\" placeholder=\"redisport\"></input>\r\n          <input type=\"text\" id=\"nodetimeout\" placeholder=\"nodetimeout\"></input>\r\n          <input type=\"text\" id=\"maxclients\" placeholder=\"maxclients\"></input>\r\n          <input type=\"text\" id=\"maxmemory\" placeholder=\"maxmemory\"></input>\r\n          <input type=\"text\" id=\"requirepass\" placeholder=\"requirepass\"></input>\r\n        </div>\r\n        <div>\r\n          {/* <label for=\"nodetimeout\" class=\"form-label\">nodetimeout : 5000</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"nodetimeout\" ></input>  */}\r\n        </div>\r\n        <div>\r\n          {/* <label for=\"maxclients\" class=\"form-label\">maxclients : 50000</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"maxclients\" ></input>  */}\r\n        </div>\r\n        <div>\r\n          {/* <label for=\"maxmemory\" class=\"form-label\">maxmemory : 4gb</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"maxmemory\"  ></input>  */}\r\n        </div>\r\n        <div>\r\n          {/* <label for=\"requirepass\" class=\"form-label\">requirepass : VP53tHYgfxcHRLFDtuLGnmhKXRuUafaN</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"requirepass\"  ></input>  */}\r\n        </div>\r\n        <br></br>\r\n        <h1>Make Redis DB Cluster</h1>\r\n\r\n<p>This is a simple example of a React component.</p>\r\n{/* {this.state.currentCount} /  */}\r\n{/* <form  class=\"col-6\"> */}\r\n<p aria-live=\"polite\">Current Status: <strong>{this.state.currentstatus.toString()}</strong></p>\r\n<div>\r\n  <label for=\"clustercmd\" class=\"form-label\">cmd : redis-cli -a VP53tHYgfxcHRLFDtuLGnmhKXRuUafaN --cluster create 10.100.65.201:7001 10.100.65.202:7001 10.100.65.203:7001 10.100.65.204:7001 10.100.65.205:7001 10.100.65.206:7001 --cluster-replicas 1 --cluster-yes</label>\r\n  <input type=\"text\" class=\"form-control\" id=\"clustercmd\"   ></input> \r\n</div>\r\n       <br></br>\r\n<div>\r\n<button className=\"btn btn-primary\" onClick={this.incrementCounter}>Create</button>\r\n</div>\r\n      \r\n        {/* </form> */}\r\n        {/* <div>\r\n        <button className=\"btn btn-primary\" onClick={this.createInventory}>Create Inventory & host</button>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async  populateAWXJobTemplate() {\r\n\r\n    this.setState({\r\n      currentstatus: false\r\n    });\r\n\r\n    var job1 = {};\r\n    job1.vm_name = document.getElementById(\"vm_name1\").value ;\r\n    job1.ip = document.getElementById(\"ip1\").value ;\r\n    job1.memory_mb = document.getElementById(\"memory_mb1\").value ;\r\n    job1.num_cpus = document.getElementById(\"num_cpus1\").value ;\r\n    this.populateCallTemplate(job1);\r\n    console.log(\"job1\", job1);\r\n\r\n    var job2 = {};\r\n    job2.vm_name = document.getElementById(\"vm_name2\").value ;\r\n    job2.ip = document.getElementById(\"ip2\").value ;\r\n    job2.memory_mb = document.getElementById(\"memory_mb2\").value ;\r\n    job2.num_cpus = document.getElementById(\"num_cpus2\").value ;\r\n    this.populateCallTemplate(job2);\r\n    console.log(\"job2\", job2);\r\n\r\n    var job3 = {};\r\n    job3.vm_name = document.getElementById(\"vm_name3\").value ;\r\n    job3.ip = document.getElementById(\"ip3\").value ;\r\n    job3.memory_mb = document.getElementById(\"memory_mb3\").value ;\r\n    job3.num_cpus = document.getElementById(\"num_cpus3\").value ;\r\n    this.populateCallTemplate(job3);\r\n    console.log(\"job3\", job3);\r\n\r\n    var job4 = {};\r\n\r\n    job4.vm_name = document.getElementById(\"vm_name4\").value ;\r\n    job4.ip = document.getElementById(\"ip4\").value ;\r\n    job4.memory_mb = document.getElementById(\"memory_mb4\").value ;\r\n    job4.num_cpus = document.getElementById(\"num_cpus4\").value ;\r\n    this.populateCallTemplate(job4);\r\n    console.log(\"job4\", job4);\r\n\r\n    var job5 = {};\r\n    job5.vm_name = document.getElementById(\"vm_name5\").value ;\r\n    job5.ip = document.getElementById(\"ip5\").value ;\r\n    job5.memory_mb = document.getElementById(\"memory_mb5\").value ;\r\n    job5.num_cpus = document.getElementById(\"num_cpus5\").value ;\r\n    this.populateCallTemplate(job5);\r\n    console.log(\"job5\", job5);\r\n\r\n    var job6 = {};\r\n    job6.vm_name = document.getElementById(\"vm_name6\").value ;\r\n    job6.ip = document.getElementById(\"ip6\").value ;\r\n    job6.memory_mb = document.getElementById(\"memory_mb6\").value ;\r\n    job6.num_cpus = document.getElementById(\"num_cpus6\").value ;\r\n    this.populateCallTemplate(job6);\r\n    console.log(\"job6\", job6);  \r\n  }\r\n\r\n  async populateCallTemplate(job) {\r\n    this.setState({\r\n      currentstatus: false, \r\n      ip : job.ip\r\n    });\r\n    const response = await fetch('api/AWXJobTemplate/CallTemplate', {\r\n      method: 'POST', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(job),\r\n    });\r\n    const data = await response.json();\r\n    //this.setState({ forecasts: data, loading: false });\r\n    // console.log(\"data\", this.state.currentstatus.toString());\r\n  \r\n    var i = 0 ;\r\n    var data2;\r\n    do {\r\n      await new Promise(resolve => setTimeout(resolve, 3000))\r\n      const response2 = await fetch('api/AWXJobTemplate/GetById/' + data.job);\r\n      data2 = await response2.json();\r\n      //console.log(\"data2\",  !data2.results[0].failed);\r\n   \r\n      if (data2.count !== 0) { i = 1; }      \r\n      \r\n    } while (i === 0);\r\n    // console.log(\"data2\",  !data2.results[0].failed);\r\n    this.setState({\r\n      currentstatus: !data2.results[0].failed\r\n    });\r\n \r\n    this.populateAWXCreateInventory(job.ip);\r\n  }\r\n  \r\n  async populateAWXCreateInventory(ip) {\r\n    await new Promise(resolve => setTimeout(resolve, 43000))\r\n    var jobs = {};\r\n    jobs.ip = ip;\r\n    const response = await fetch('api/AWXJobRedis/CreateInventory', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(jobs),\r\n    });\r\n    const data = await response.json();\r\n    console.log(\"data\", data.id);\r\n    this.setState({\r\n      invenid: data.id\r\n    });\r\n    localStorage.setItem(\"invenid\"+ip, data.id);\r\n    console.log(\"data\", data);\r\n    console.log(\"invenid\", this.state.invenid);\r\n    this.populateAWXRedisJobTemplate(ip);\r\n  }\r\n\r\n  async populateAWXRedisJobTemplate(ip) {\r\n    await new Promise(resolve => setTimeout(resolve, 43000))\r\n    this.setState({\r\n      currentstatus: false\r\n    });\r\n   var jobs = {};\r\n \r\n   jobs.redisport = document.getElementById(\"redisport\").value ;\r\n   jobs.ip = ip ;\r\n   jobs.maxmemory = document.getElementById(\"maxmemory\").value ;\r\n   jobs.maxclients = document.getElementById(\"maxclients\").value ;\r\n   jobs.requirepass = document.getElementById(\"requirepass\").value ;\r\n   jobs.nodetimeout = document.getElementById(\"nodetimeout\").value ;\r\n   jobs.invenid =  localStorage.getItem(\"invenid\"+ip);\r\n\r\n    const response = await fetch('api/AWXJobRedis/CallTemplate', {\r\n      method: 'POST', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(jobs),\r\n    });\r\n    const data = await response.json();\r\n    //this.setState({ forecasts: data, loading: false });\r\n    // console.log(\"data\", this.state.currentstatus.toString());\r\n  \r\n    var i = 0 ;\r\n    var data2;\r\n    do {\r\n      await new Promise(resolve => setTimeout(resolve, 3000))\r\n      const response2 = await fetch('api/AWXJobRedis/GetById/' + data.job);\r\n      data2 = await response2.json();\r\n      //console.log(\"data2\",  !data2.results[0].failed);\r\n   \r\n      if (data2.count !== 0) { i = 1; }      \r\n      \r\n    } while (i === 0);\r\n    // console.log(\"data2\",  !data2.results[0].failed);\r\n    this.setState({\r\n      currentstatus: !data2.results[0].failed\r\n    });\r\n    // console.log(\"data2results\", data2.results[0].failed);\r\n  }\r\n\r\n  async populateAWXJobClustercmd() {\r\n    var jobs = {};\r\n  \r\n    jobs.clustercmd = document.getElementById(\"clustercmd\").value ;\r\n   \r\n     this.setState({\r\n       currentstatus: false\r\n     });\r\n     const response = await fetch('api/AWXJobRedis/MakeCluster', {\r\n       method: 'POST', \r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n       },\r\n       body: JSON.stringify(jobs),\r\n     });\r\n     const data = await response.json();\r\n \r\n     var i = 0 ;\r\n     var data2;\r\n     do {\r\n       await new Promise(resolve => setTimeout(resolve, 3000))\r\n       const response2 = await fetch('api/AWXJobRedis/GetById/' + data.job);\r\n       data2 = await response2.json();\r\n       //console.log(\"data2\",  !data2.results[0].failed);\r\n    \r\n       if (data2.count !== 0) { i = 1; }      \r\n       \r\n     } while (i === 0);\r\n     // console.log(\"data2\",  !data2.results[0].failed);\r\n     this.setState({\r\n       currentstatus: !data2.results[0].failed\r\n     });\r\n     // console.log(\"data2results\", data2.results[0].failed);\r\n \r\n   }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}