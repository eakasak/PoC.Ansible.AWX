{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevApp\\\\PoC.Ansible.AWX\\\\PoC.Ansible.AWX\\\\ClientApp\\\\src\\\\components\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCount: 0,\n      currentstatus: false\n    };\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  incrementCounter() {\n    this.setState({\n      currentCount: this.state.currentCount + 1\n    });\n    this.populateAWXJobTemplate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create VM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is a simple example of a React component.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"aria-live\": \"polite\",\n          children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: this.state.currentstatus.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"vm_name\",\n          placeholder: \"vm name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), \" Ansible-RedisCluster-A10\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"ip\",\n          placeholder: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), \" 10.100.65.210\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"memory_mb\",\n          placeholder: \"memory mb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), \" 8192\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"num_cpus\",\n          placeholder: \"num cpus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), \" 2\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputEmail4\",\n            class: \"form-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            class: \"form-control\",\n            id: \"inputEmail4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.incrementCounter,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateAWXJobTemplate() {\n    var jobs = {};\n    jobs.vm_name = document.getElementById(\"vm_name\").value;\n    jobs.ip = document.getElementById(\"ip\").value;\n    jobs.memory_mb = document.getElementById(\"memory_mb\").value;\n    jobs.num_cpus = document.getElementById(\"num_cpus\").value;\n    this.setState({\n      currentstatus: false\n    });\n    const response = await fetch('api/AWXJobTemplate/CallTemplate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jobs)\n    });\n    const data = await response.json(); //this.setState({ forecasts: data, loading: false });\n    // console.log(\"data\", this.state.currentstatus.toString());\n\n    var i = 0;\n    var data2;\n\n    do {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      const response2 = await fetch('api/AWXJobTemplate/GetById/' + data.job);\n      data2 = await response2.json(); //console.log(\"data2\",  !data2.results[0].failed);\n\n      if (data2.count !== 0) {\n        i = 1;\n      }\n    } while (i === 0); // console.log(\"data2\",  !data2.results[0].failed);\n\n\n    this.setState({\n      currentstatus: !data2.results[0].failed\n    }); // console.log(\"data2results\", data2.results[0].failed);\n  }\n\n}\nCounter.displayName = Counter.name;","map":{"version":3,"sources":["D:/DevApp/PoC.Ansible.AWX/PoC.Ansible.AWX/ClientApp/src/components/Counter.js"],"names":["React","Component","Counter","constructor","props","state","currentCount","currentstatus","incrementCounter","bind","setState","populateAWXJobTemplate","render","toString","jobs","vm_name","document","getElementById","value","ip","memory_mb","num_cpus","response","fetch","method","headers","body","JSON","stringify","data","json","i","data2","Promise","resolve","setTimeout","response2","job","count","results","failed","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0,  currentstatus: false };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n    this.populateAWXJobTemplate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Create VM</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n        {/* {this.state.currentCount} /  */}\r\n        <form  class=\"col-6\">\r\n        <p aria-live=\"polite\">Current Status: <strong>{this.state.currentstatus.toString()}</strong></p>\r\n        <input type=\"text\" class=\"form-control\" id=\"vm_name\" placeholder=\"vm name\" ></input> Ansible-RedisCluster-A10\r\n        <br/> <br/>\r\n        <input type=\"text\" class=\"form-control\" id=\"ip\"  placeholder=\"ip\"  ></input> 10.100.65.210\r\n        <br/> <br/>\r\n        <input type=\"text\" class=\"form-control\" id=\"memory_mb\" placeholder=\"memory mb\" ></input> 8192\r\n        <br/> <br/>\r\n        <input type=\"text\" class=\"form-control\" id=\"num_cpus\"  placeholder=\"num cpus\"  ></input> 2\r\n        <br/> <br/>\r\n        <div class=\"col-md-6\">\r\n    <label for=\"inputEmail4\" class=\"form-label\">Email</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"inputEmail4\"></input>\r\n  </div>\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Create</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateAWXJobTemplate() {\r\n   var jobs = {};\r\n \r\n   jobs.vm_name = document.getElementById(\"vm_name\").value ;\r\n   jobs.ip = document.getElementById(\"ip\").value ;\r\n   jobs.memory_mb = document.getElementById(\"memory_mb\").value ;\r\n   jobs.num_cpus = document.getElementById(\"num_cpus\").value ;\r\n\r\n    this.setState({\r\n      currentstatus: false\r\n    });\r\n    const response = await fetch('api/AWXJobTemplate/CallTemplate', {\r\n      method: 'POST', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(jobs),\r\n    });\r\n    const data = await response.json();\r\n    //this.setState({ forecasts: data, loading: false });\r\n    // console.log(\"data\", this.state.currentstatus.toString());\r\n  \r\n    var i = 0 ;\r\n    var data2;\r\n    do {\r\n      await new Promise(resolve => setTimeout(resolve, 3000))\r\n      const response2 = await fetch('api/AWXJobTemplate/GetById/' + data.job);\r\n      data2 = await response2.json();\r\n      //console.log(\"data2\",  !data2.results[0].failed);\r\n   \r\n      if (data2.count !== 0) { i = 1; }      \r\n      \r\n    } while (i === 0);\r\n    // console.log(\"data2\",  !data2.results[0].failed);\r\n    this.setState({\r\n      currentstatus: !data2.results[0].failed\r\n    });\r\n    // console.log(\"data2results\", data2.results[0].failed);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}