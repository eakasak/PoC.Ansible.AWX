{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevApp\\\\PoC.Ansible.AWX\\\\PoC.Ansible.AWX\\\\ClientApp\\\\src\\\\components\\\\redis-database.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class RedisDatabase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCount: 0,\n      currentstatus: false\n    };\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  incrementCounter() {\n    this.setState({\n      currentCount: this.state.currentCount + 1\n    });\n    this.populateAWXJobTemplate();\n  }\n\n  createInventory() {\n    this.populateCreateInventory();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Redis DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is a simple example of a React component.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"aria-live\": \"polite\",\n        children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.currentstatus.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"ip\",\n          class: \"form-label\",\n          children: \"ip : 10.100.65.210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"ip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"redisport\",\n          class: \"form-label\",\n          children: \"redisport :  7001\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"redisport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"nodetimeout\",\n          class: \"form-label\",\n          children: \"nodetimeout : 5000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"nodetimeout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"maxclients\",\n          class: \"form-label\",\n          children: \"maxclients : 50000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"maxclients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"maxmemory\",\n          class: \"form-label\",\n          children: \"maxmemory : 4gb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"maxmemory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"requirepass\",\n          class: \"form-label\",\n          children: \"requirepass : VP53tHYgfxcHRLFDtuLGnmhKXRuUafaN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"requirepass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.incrementCounter,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.createInventory,\n          children: \"Create Inventory & host\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateAWXJobTemplate() {\n    var jobs = {};\n    jobs.redisport = document.getElementById(\"redisport\").value;\n    jobs.ip = document.getElementById(\"ip\").value;\n    jobs.maxmemory = document.getElementById(\"maxmemory\").value;\n    jobs.maxclients = document.getElementById(\"maxclients\").value;\n    jobs.requirepass = document.getElementById(\"requirepass\").value;\n    jobs.nodetimeout = document.getElementById(\"nodetimeout\").value;\n    this.setState({\n      currentstatus: false\n    });\n    const response = await fetch('api/AWXRedise/CallTemplate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jobs)\n    });\n    const data = await response.json(); //this.setState({ forecasts: data, loading: false });\n    // console.log(\"data\", this.state.currentstatus.toString());\n\n    var i = 0;\n    var data2;\n\n    do {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      const response2 = await fetch('api/AWXRedise/GetById/' + data.job);\n      data2 = await response2.json(); //console.log(\"data2\",  !data2.results[0].failed);\n\n      if (data2.count !== 0) {\n        i = 1;\n      }\n    } while (i === 0); // console.log(\"data2\",  !data2.results[0].failed);\n\n\n    this.setState({\n      currentstatus: !data2.results[0].failed\n    }); // console.log(\"data2results\", data2.results[0].failed);\n  }\n\n  async populateCreateInventory() {\n    var jobs = {};\n    const response = await fetch('api/AWXRedise/CreateInventory', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jobs)\n    });\n    const data = await response.json();\n  }\n\n}\nRedisDatabase.displayName = RedisDatabase.name;","map":{"version":3,"sources":["D:/DevApp/PoC.Ansible.AWX/PoC.Ansible.AWX/ClientApp/src/components/redis-database.js"],"names":["React","Component","RedisDatabase","constructor","props","state","currentCount","currentstatus","incrementCounter","bind","setState","populateAWXJobTemplate","createInventory","populateCreateInventory","render","toString","jobs","redisport","document","getElementById","value","ip","maxmemory","maxclients","requirepass","nodetimeout","response","fetch","method","headers","body","JSON","stringify","data","json","i","data2","Promise","resolve","setTimeout","response2","job","count","results","failed","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class RedisDatabase extends Component {\r\n  static displayName = RedisDatabase.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0,  currentstatus: false };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n    this.populateAWXJobTemplate();\r\n  }\r\n\r\n  createInventory() {\r\n    this.populateCreateInventory();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Create Redis DB</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n        {/* {this.state.currentCount} /  */}\r\n        {/* <form  class=\"col-6\"> */}\r\n        <p aria-live=\"polite\">Current Status: <strong>{this.state.currentstatus.toString()}</strong></p>\r\n        <div>\r\n          <label for=\"ip\" class=\"form-label\">ip : 10.100.65.210</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"ip\"   ></input> \r\n        </div>\r\n        <div>\r\n          <label for=\"redisport\" class=\"form-label\">redisport :  7001</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"redisport\"></input> \r\n        </div>\r\n        <div>\r\n          <label for=\"nodetimeout\" class=\"form-label\">nodetimeout : 5000</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"nodetimeout\" ></input> \r\n        </div>\r\n        <div>\r\n          <label for=\"maxclients\" class=\"form-label\">maxclients : 50000</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"maxclients\" ></input> \r\n        </div>\r\n        <div>\r\n          <label for=\"maxmemory\" class=\"form-label\">maxmemory : 4gb</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"maxmemory\"  ></input> \r\n        </div>  \r\n        <div>\r\n          <label for=\"requirepass\" class=\"form-label\">requirepass : VP53tHYgfxcHRLFDtuLGnmhKXRuUafaN</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"requirepass\"  ></input> \r\n        </div>  \r\n        <br></br>\r\n        <div>\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Create</button>\r\n        </div>\r\n        {/* </form> */}\r\n        <div>\r\n        <button className=\"btn btn-primary\" onClick={this.createInventory}>Create Inventory & host</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateAWXJobTemplate() {\r\n   var jobs = {};\r\n \r\n   jobs.redisport = document.getElementById(\"redisport\").value ;\r\n   jobs.ip = document.getElementById(\"ip\").value ;\r\n   jobs.maxmemory = document.getElementById(\"maxmemory\").value ;\r\n   jobs.maxclients = document.getElementById(\"maxclients\").value ;\r\n   jobs.requirepass = document.getElementById(\"requirepass\").value ;\r\n   jobs.nodetimeout = document.getElementById(\"nodetimeout\").value ;\r\n    this.setState({\r\n      currentstatus: false\r\n    });\r\n    const response = await fetch('api/AWXRedise/CallTemplate', {\r\n      method: 'POST', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(jobs),\r\n    });\r\n    const data = await response.json();\r\n    //this.setState({ forecasts: data, loading: false });\r\n    // console.log(\"data\", this.state.currentstatus.toString());\r\n  \r\n    var i = 0 ;\r\n    var data2;\r\n    do {\r\n      await new Promise(resolve => setTimeout(resolve, 3000))\r\n      const response2 = await fetch('api/AWXRedise/GetById/' + data.job);\r\n      data2 = await response2.json();\r\n      //console.log(\"data2\",  !data2.results[0].failed);\r\n   \r\n      if (data2.count !== 0) { i = 1; }      \r\n      \r\n    } while (i === 0);\r\n    // console.log(\"data2\",  !data2.results[0].failed);\r\n    this.setState({\r\n      currentstatus: !data2.results[0].failed\r\n    });\r\n    // console.log(\"data2results\", data2.results[0].failed);\r\n  }\r\n\r\n  async populateCreateInventory() {\r\n    var jobs = {};\r\n \r\n    const response = await fetch('api/AWXRedise/CreateInventory', {\r\n      method: 'POST', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(jobs),\r\n    });\r\n    const data = await response.json();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}